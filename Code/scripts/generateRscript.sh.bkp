#!/bin/bash

while getopts s:o:p: option
do
    case "${option}"
        in
        s)species=${OPTARG};;
	o)output_path=${OPTARG};;
	p)groups_priority=${OPTARG};;
    esac
done

if [[ -z $species ]] || [[ -z $output_path ]]; then
        echo "Use $0 -s {human/mouse} -o output_path"
        exit
fi

echo species: $species
echo output: $output_path

if [[ $species == "human" ]]; then
	species=hsa
elif [[ $species == "mouse" ]]; then
	species=mmu
fi

scriptR=$output_path/script.R

>&2 echo Creating R script in $scriptR

echo "rm(list=ls())

args <- commandArgs()
species <- args[6]
groups.priority <- args[7]
output.path <- args[8]
degs.condition <- args[9]
kegg.enrichment.condition <- args[10]
go.enrichment.condition <- args[11]
kegg.pathway.condition <- args[12]
print(args)
print(paste('species: ', species, sep = ''))
print(paste('priority: ', groups.priority, sep = ''))
print(paste('output.path:', output.path, sep = ''))
print(paste('degs: ', degs.condition, sep = ''))
print(paste('kegg enrichment: ', kegg.enrichment.condition, sep = ''))
print(paste('go enrichment: ', go.enrichment.condition, sep = ''))
print(paste('kegg pathway: ', kegg.pathway.condition, sep = ''))

#source(paste(Sys.getenv('HOME'), 'Scrivania/NGS-SCRIPT/Luigi/R/RNAseq_enrichment.R', sep='/'))
source('/home/utente/Desktop/research/RNA/scripts/RNAseq_enrichment.R')

if(!require('stringr')){
  install.packages('stringr', repos='https://cran.stat.unipd.it/', version='1.4.0')
  library(stringr)
}
if(!require('rstudioapi')){
  install.packages('rstudioapi', repos='https://cran.stat.unipd.it/', version='0.13')
  library(rstudioapi)
}

#output.path <- paste(dirname(rstudioapi::getSourceEditorContext()$path), '/', sep='')
print('output:')
print(output.path)

sink(paste(output.path, 'Rlog', sep = '/'), split = TRUE)

groups <- list.dirs(paste(output.path, 'Groups', sep='/'), recursive=FALSE, full.name=FALSE)
print('groups sorted by priority: ')
print(groups[groups.priority])

get.priority <- function(min.group, max.group){
  priorities <- groups.priority #REPLACE WITH ARRAY WITH ID GROUPS SORTED BY PRIORITY
  if(length(priorities) == 0) {
    return(c(min.group, max.group))
  } else {
    min.group.priority <- which(priorities == min.group)
    max.group.priority <- which(priorities == max.group)
    if(length(min.group.priority) == 0 || length(max.group.priority) == 0){
      if(length(min.group.priority) == 0){
        return(c(max.group, min.group))
      } else {
        return(c(min.group, max.group)) 
      }
    } else {
      if(min.group.priority < max.group.priority){
        return(c(min.group, max.group)) 
      } else {
        return(c(max.group, min.group))
      }
    }
  }
}

comparisonToDo <- function(group.comparison.id){
  toDo <- c() #REPLACE WITH ARRAY WITH THE ID OF THE WANTED COMPARISON
  if(length(toDo) == 0){
    return(TRUE)
  } else {
    return(group.comparison.id %in% toDo)
  }
}

print('Establish comparisons')
groups.comparison.ids <- list()
for(groups.id.1 in 1:length(groups)){
	for(groups.id.2 in 1:length(groups)){
		if(groups.id.1 != groups.id.2){
			min.group <- min(groups.id.1, groups.id.2)
			max.group <- max(groups.id.1, groups.id.2)
			group.priority <- get.priority(min.group, max.group)
			if(! list(group.priority) %in% groups.comparison.ids){
				groups.comparison.ids <- c(groups.comparison.ids, list(group.priority)) 	
			}
		}
	}
}

groups.comparison <- list()
for(groups.comparison.id in 1:length(groups.comparison.ids)){
	groups.comparison <- c(groups.comparison, list(c(groups[groups.comparison.ids[groups.comparison.id][[1]][1]], groups[groups.comparison.ids[groups.comparison.id][[1]][2]]))) 
}

if(degs.condition){
	print('DESeq2 analys')
	for(group.comparison.id in 1:length(groups.comparison)){
		group.comparison <- groups.comparison[[group.comparison.id]]
		comparison <- paste(group.comparison[1], group.comparison[2], sep = '_')
		print(comparison)
		if(comparisonToDo(group.comparison.id)){
	  	if(dir.exists(paste(output.path, comparison, sep = '/'))){
	  		print('Comparison already made')
	  	} else {
	  		DEG.analysis(data.path = output.path, CTR = group.comparison[1], noCTR = group.comparison[2])
	  	}
		} else {
		  print('Comparison exluded')
		}
	}
}

if(kegg.enrichment.condition){
	print('KEGG enrichment')
	for(group.comparison.id in 1:length(groups.comparison)){
	  group.comparison <- groups.comparison[[group.comparison.id]]
	  comparison <- paste(group.comparison[1], group.comparison[2], sep = '_')
	  print(comparison)
	  if(comparisonToDo(group.comparison.id)){
	    if(dir.exists(paste(output.path, 'analysis', comparison, 'Tables', 'KEGG enrichment', sep = '/'))){
	      print('Comparison already made')
	    } else {
	      group.path <- paste(output.path, 'analysis', comparison, sep = '/')
	      KEGG.enrichment.table.path(DEGs.table.path = paste(group.path, 'Tables', 'DEG.tsv', sep = '/'), output.main.dir = paste(group.path, 'Tables', sep = '/'), species = species)
	    }
	  } else {
	    print('Comparison exluded')
	  }
	}
}

if(go.enrichment.condition){
	print('GO enrichment')
	for(group.comparison.id in 1:length(groups.comparison)){
	  group.comparison <- groups.comparison[[group.comparison.id]]
	  comparison <- paste(group.comparison[1], group.comparison[2], sep = '_')
	  print(comparison)
	  if(comparisonToDo(group.comparison.id)){
	    if(dir.exists(paste(output.path, 'analysis', comparison, 'Tables', 'GO enrichment', sep = '/'))){
	      print('Comparison already made')	
	    } else {
	      group.path <- paste(output.path, 'analysis', comparison, sep = '/')
	      gene.ontology.enrichment.table.path(DEGs.table.path = paste(group.path, 'Tables', 'DEG.tsv', sep = '/'), output.main.dir = paste(group.path, 'Tables', sep = '/'), species = species)
	    }
	  } else {
	    print('Comparison exluded')
	  }
	}
}

if(kegg.pathway.condition){
	print('KEGG pathways')
	for(group.comparison.id in 1:length(groups.comparison)){
	  group.comparison <- groups.comparison[[group.comparison.id]]
	    comparison <- paste(group.comparison[1], group.comparison[2], sep = '_')
	    print(comparison)
	    if(comparisonToDo(group.comparison.id)){
	      if(dir.exists(paste(output.path, 'analysis', comparison, 'Plot', 'KEGG pathways', sep = '/'))){
	    	print('Comparison already made')
	      } else {
	        group.path <- paste(output.path, 'analysis', comparison, sep = '/')
	  	KEGG.pathway.table.path(DEGs.table.path = paste(group.path, 'Tables', 'DEG.tsv', sep = '/'), output.main.dir =  paste(group.path, 'Plot', sep = '/'), species = species)
	      }
	    } else {
	      print('Comparison exluded')
	    }
	}
}

sink()" > $scriptR

#echo Running $scriptR
#Rscript $scriptR
